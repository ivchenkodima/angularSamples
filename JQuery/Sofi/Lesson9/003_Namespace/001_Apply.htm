<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>

    <script type="text/javascript">
        // var object = { name: 'Ivan' };

        // function print(a, b) {
        //     alert(this.name + " " + a + " " + b);
        // }

        // print('a', 'b'); //- не работает

        // // print.apply(object, ['hello', 'world']); - производим вызов функции print на объекте object передавая в качестве 
        // // параметра два значение 'hello', как первый аргумент и 'world' как второй
        // // при этом если в функции print используется ключевое слово this оно будет ссылаться на объект object
        // print.apply(object, ['hello', 'world']);


        // // print.call(obj, 'hello', 'world') метод call используется для того, что бы указать объект, на который будет ссылаться ключевое слово this в вызываемой функции.
        // print.call(object, 'hello', 'world');

        // // отличие call от apply заключается в том что в call можно передавать неограниченное количество аргументов, в то время как apply 
        // // принимает только два параметра объект и массив аргументов для функции.

       //  Array.prototype._join = Array.prototype.join;
       //  Array.prototype.join = function() {
       //          alert("Меня вызвали! Аргументов:"+arguments.length)
       //      return Array.prototype._join.apply(this, arguments)

       //  }

       // var arr = [1,2,3];
       // arr._join();


    window.name = 'окошко';
    var test = function () {
        alert(this.name);
    }
    test(); //->окошко, т.к. функция объявлена в контексте window

    var obj = {
        name: 'объектик',
        fx: function() {
            test(); //->окошко, т.к. функция объявлена в контексте window
            test.apply(this);//->объектик, т.к. мы вызвали функцию в нужном нам контексте
            }
        }

    obj.fx();



    </script>

</head>
<body>
</body>
</html>
